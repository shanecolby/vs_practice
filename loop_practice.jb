# 1. Write a while loop to print the numbers 1 through 10





# x = 1
# while x <= 10
#   p x
#   x = x + 1
# end


# 2. Write a while loop that prints the word "hello" 5 times.





# word = "hello"
# index = 0
# while index < 5
#   p word
#   index += 1
# end



# 5.times do
#   p "hello"
# end


# 3. Write a while loop that asks the user to enter a word and will run forever until the user enters the word "stop".









# while true
#   p "enter a word"
#   word = gets.chomp
#     if word == "stop"
#     break
#   end
# end



# 4. Write a while loop that prints the numbers 0 through 100, increasing by 5 each time.

# x=0
# while x <= 100
#   p x
#   x = x + 5
# end








# x = 0
# while x <= 100
#   p x
#   x += 5
# end


# 5. Write a while loop that prints the number 9000 ten times.




# index = 0
# x = 9000
# while index <= 9
#   p x
#   index += 1
# end


# 6. Write a while loop that asks the user to enter a number and will run forever until the user enters a number greater than 10.







# while true
#   p "enter a number: "
#   number = gets.chomp
#   if number.to_i > 10
#     break
#   end
# end


# 7. Write a while loop that prints the numbers 50 to 70.


# x = 50
# while x <= 70
#   p x
#   x += 1
# end


# 8. Write a while loop that prints the phrase "Around the world" 144 times.

# word = "Around the world"
# index = 0
# while index < 144
#   p word
#   index += 1
# end


# 144.times do
#   p "around the world"
# end


# 9. Write a while loop that asks the user to enter a word and will run forever until the user enters a word with more than 5 letters.


# while true
#   p "Enter a word: "
#   word = gets.chomp
#   if word.length > 5
#     break
#   end
# end



# 10. Write a while loop that prints the even numbers from 2 to 40.



# x = 2
# while x <= 40
#   p x 
#   x += 2
# end







#  1. Start with an array of numbers and create a new array with each number times 3.
#     For example, [1, 2, 3] becomes [3, 6, 9].




# def array(array)
#   new_array = []
#   array.each do |number|
#     new_array << number * 3
#   end
#   return new_array
# end
# p array([1,2,3])



# def array(array)
#   index = 0
#   new_array = []
#   while index < array.length
#     new_array << array[index] * 3
#     index += 1
#   end
#   return new_array
# end
# p array([1,2,3])



# def times3(array)
#   index = 0
#   while index < array.length
#     p array[index] * 3
#     index += 1
#   end
# end
# p times3([1,2,3])



#  2. Start with an array of strings and create a new array with each string upcased.
#     For example, ["hello", "goodbye"] becomes ["HELLO", "GOODBYE"].




# def strings(array)
#   new_array = []
#   array.each do |word|
#     new_array << word.upcase
#   end
#   return new_array
# end
# p strings(["hello", "goodbye"])


# def upcase(array)
#   index = 0
#   new_array = []
#   while index < array.length
#     new_array << array[index].upcase
#     index += 1
#   end
#   return new_array

# end
# p upcase(["hello", "goodbye"])







# def upcased(array)
#   index = 0
#   while index < array.length
#     p array[index].upcase
#     index += 1
#   end

# end
# p upcased(["hello", "goodbye"])



#  3. Start with an array of hashes and create a new array of string values from each hash's :name key.
#     For example, [{name: "Alice", age: 27}, {name: "Blane", age: 16}] becomes ["Alice", "Blane"].

# def convert(array)
#   new_array = []
#   array.each do |person|
#     new_array << person[:name]
#   end
#   return new_array
 
# end
# p convert([{name: "Alice", age: 27}, {name: "Blane", age: 16}])





  # array = [{name: "Alice", age: 27}, {name: "Blane", age: 16}]
  # new_array = []
  # array.each do |person|
  #   new_array << person[:name]
  # end
  # p new_array
  



#  4. Start with an array of numbers and create a new array with each number plus 7.
#     For example, [1, 2, 3] becomes [8, 9, 10].


def add(array)
  new_array=[]
  array.each do |number|
    new_array << number + 7
  end
  return new_array
    


end
p add([1,2,3])




# def add(array)
#   new_array = []
#   array.each do |number|
#     new_array << number + 7
#   end
#   return new_array
# end
# p add([1,2,3])

# def plus7(array)
#   index = 0
#   new_array = []
#   while index < array.length
#     new_array << array[index] + 7
#     index += 1
#   end
#   return new_array

# end
# p plus7([1,2,3])




# numbers = [1,2,3]
# new_array = []
# numbers.each do |number|
#   new_array << number + 7
# end
# p new_array

#  5. Start with an array of strings and create a new array with each string's length.
#     For example, ["hello", "goodbye"] becomes [5, 7].




# def strings(array)
#   new_array = []
#   index = 0
#   while index < array.length
#     new_array << array[index].length
#     index += 1
#   end
#   return new_array
# end
# p strings(["hello", "goodbye"])

# def strings(array)
#   new_array = []
#   array.each do |word|
#     new_array << word.length
#   end
#   return new_array
# end
# p strings(["hello", "goodbye"])





# strings = ["hello", "goodbye"]
# new_array = []
# strings.each do |string|
#   new_array << string.length
# end
# p new_array




#  6. Start with an array of hashes and create a new array of number values from each hash's :age key.
#     For example, [{name: "Alice", age: 27}, {name: "Blane", age: 16}] becomes [27, 16].


# def age(array)
#   new_array = []
#   index = 0
#   while index < array.length
#     new_array << array[index][:age]
#     index += 1
#   end
#   return new_array

# end
# p age([{name: "Alice", age: 27}, {name: "Blane", age: 16}])





# hashes = [{name: "Alice", age: 27}, {name: "Blane", age: 16}]
# new_array = []
# hashes.each do |person|
#   new_array << person[:age]
# end
# p new_array



#  7. Start with an array of numbers and create a new array with each number divided by 2.
#     For example, [1, 2, 3] becomes [0.5, 1.0, 1.5].



def divide(array)
 new_array=[]
  array.each do |number|
    new_array << number / 2
  end
  return new_array

end
p divide([1,2,3])

def divide(array)
  index = 0
  new_array = []
  while index < array.length
    new_array << array[index] / 2.0
    index += 1
  end
  return new_array

end
p divide([2,4,6])

# def divide(array)
#   new_array = []
#   index = 0
#   while index < array.length
#     new_array << array[index] / 2.0
#     index += 1
#   end
#   return new_array
# end
# p divide([1,2,3])


# def divide(array)
#   new_array = []
#   array.each do |number|
#     new_array << number / 2.0
#   end
#   return new_array
# end
# p divide([1,2,3])






# numbers = [1,2,3]
# new_array = []
# numbers.each do |number|
#   new_array << number / 2.0
# end
# p new_array



#  8. Start with an array of strings and create a new array with each string's first letter only.
#     For example, ["hello", "goodbye"] becomes ["h", "g"].



# def firstletter(array)
#   index = 0
#   new_array = []
#   while index < array.length
#     new_array << array[index][0]
#     index += 1
#   end
#   return new_array
# end
# p firstletter(["hello", "goodbye"])



# def firstletter(array)
#   new_array = []
#   array.each do |word|
#     new_array << word[0]
#   end
#   return new_array
# end
# p firstletter(["hello", "goodbye"])





# strings = ["hello", "goodbye"]
# new_array = []
# strings.each do |string|
#   new_array << string[0]
# end
# p new_array



# 9.  Start with an array of hashes and create a new array of number values from each hash's :age key times 2.
#     For example, [{name: "Alice", age: 27}, {name: "Blane", age: 16}] becomes [54, 32].

# def agedoubled(array)
#   index = 0
#   new_array = []
#   while index < array.length
#     new_array << array[index][:age] * 2
#     index += 1
#   end
#   return new_array

# end
# p agedoubled([{name: "Alice", age: 27}, {name: "Blane", age: 16}])

# def array(array)
#   new_array = []
#   array.each do |person|
#     new_array << person[:age] * 2
#   end
#   return new_array

# end
# p array([{name: "Alice", age: 27}, {name: "Blane", age: 16}])




# hashes = [{name: "Alice", age: 27}, {name: "Blane", age: 16}]
# new_array = []
# hashes.each do |person|
#   new_array << person[:age] * 2
# end
# p new_array



# 10. Start with an array of numbers and create a new array with each number converted into a string.
#     For example, [1, 2, 3] becomes ["1", "2", "3"].

# def tostring(array)
#   index = 0
#   new_array = []
#   while index < array.length
#     new_array << array[index].to_s
#     index += 1
#   end
#   return new_array
# end
# p tostring([1,2,3])

# def toString(array)
#   new_array = []
#   array.each do |number|
#     new_array << number.to_s
#   end
#   return new_array

# end
# p toString([1,2,3])






# numbers = [1,2,3]
# new_array = []
# numbers.each do |number|
#   new_array << number.to_s
# end
# p new_array

